#@ load("@ytt:data", "data")
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: velero
  name: velero
  namespace: #@ data.values.namespace
spec:
  selector:
    matchLabels:
      deploy: velero
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8085"
        prometheus.io/scrape: "true"
      labels:
        component: velero
        deploy: velero
    spec:
      containers:
      - args:
        - server
        #@ if data.values.csi.enabled:
        - --features=EnableCSI
        #@ end
        command:
        - /velero
        env:
        - name: VELERO_SCRATCH_DIR
          value: /scratch
        - name: VELERO_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_LIBRARY_PATH
          value: /plugins
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /credentials/cloud
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: /credentials/cloud
        - name: AZURE_CREDENTIALS_FILE
          value: /credentials/cloud
        - name: ALIBABA_CLOUD_CREDENTIALS_FILE
          value: /credentials/cloud
        image: #@ data.values.images.velero.repository + ':' + data.values.images.velero.tag
        imagePullPolicy: #@ data.values.images.velero.pullPolicy
        name: velero
        ports:
        - containerPort: 8085
          name: metrics
        resources:
          limits:
            cpu: "1"
            memory: 256Mi
          requests:
            cpu: 500m
            memory: 128Mi
        volumeMounts:
        - mountPath: /plugins
          name: plugins
        - mountPath: /scratch
          name: scratch
        - mountPath: /credentials
          name: cloud-credentials
      initContainers:
      - image: #@ data.values.images.awsPlugin.repository + ':' + data.values.images.awsPlugin.tag
        imagePullPolicy: #@ data.values.images.awsPlugin.pullPolicy
        name: velero-plugin-for-aws
        volumeMounts:
        - mountPath: /target
          name: plugins
      #@ if data.values.csi.enabled:
      - image: #@ data.values.images.csiPlugin.repository + ':' + data.values.images.csiPlugin.tag
        imagePullPolicy: #@ data.values.images.csiPlugin.pullPolicy
        name: velero-plugin-for-csi
        volumeMounts:
          - mountPath: /target
            name: plugins
      #@ end
      restartPolicy: Always
      serviceAccountName: velero
      volumes:
      - emptyDir: {}
        name: plugins
      - emptyDir: {}
        name: scratch
      - name: cloud-credentials
        secret:
          secretName: cloud-credentials
